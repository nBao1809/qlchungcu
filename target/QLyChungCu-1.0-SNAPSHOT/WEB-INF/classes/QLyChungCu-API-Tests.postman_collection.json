{
	"info": {
		"_postman_id": "random-uuid",
		"name": "QLyChungCu API Collection",
		"description": "API collection for QLyChungCu system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/QLyChungCu",
			"type": "string"
		},
		{
			"key": "userToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "adminToken",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "1. Authentication & User Management",
			"item": [
				{
					"name": "Login as Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"adminToken\", jsonData.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token is present\", function () {",
									"    pm.expect(jsonData.token).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "login"]
						}
					}
				},
				{
					"name": "Login as Resident",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userToken\", jsonData.token);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Token is present\", function () {",
									"    pm.expect(jsonData.token).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"resident1\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "login"]
						}
					}
				},
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has required fields\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.username).to.exist;",
									"    pm.expect(jsonData.fullName).to.exist;",
									"    pm.expect(jsonData.role).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/profile",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "profile"]
						}
					}
				}
			]
		},
		{
			"name": "2. Apartment Management",
			"item": [
				{
					"name": "Get All Apartments (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/admin/apartments",
							"host": ["{{baseUrl}}"],
							"path": ["api", "admin", "apartments"]
						}
					}
				},
				{
					"name": "Create New Apartment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has apartment data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apartmentCode).to.exist;",
									"    pm.expect(jsonData.floor).to.exist;",
									"    pm.expect(jsonData.block).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apartmentCode\": \"A101\",\n    \"floor\": 1,\n    \"block\": \"A\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/apartments",
							"host": ["{{baseUrl}}"],
							"path": ["api", "admin", "apartments"]
						}
					}
				}
			]
		},
		{
			"name": "3. Vehicle Management",
			"item": [
				{
					"name": "Get User Vehicles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/vehicles",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "vehicles"]
						}
					}
				},
				{
					"name": "Register New Vehicle",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has vehicle data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.licensePlate).to.exist;",
									"    pm.expect(jsonData.vehicleType).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"licensePlate\": \"51F1-23456\",\n    \"vehicleType\": \"MOTORBIKE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/vehicles",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "vehicles"]
						}
					}
				}
			]
		},
		{
			"name": "4. Bill Management",
			"item": [
				{
					"name": "Get User Bills",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/bills",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "bills"]
						}
					}
				},
				{
					"name": "Create New Bill (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has bill data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.apartmentId).to.exist;",
									"    pm.expect(jsonData.month).to.exist;",
									"    pm.expect(jsonData.year).to.exist;",
									"    pm.expect(jsonData.details).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"apartmentId\": 1,\n    \"month\": 5,\n    \"year\": 2025,\n    \"details\": [\n        {\n            \"feeTypeId\": 1,\n            \"quantity\": 100,\n            \"unitPrice\": 3500,\n            \"note\": \"Tiền điện tháng 5\"\n        },\n        {\n            \"feeTypeId\": 2,\n            \"quantity\": 15,\n            \"unitPrice\": 25000,\n            \"note\": \"Tiền nước tháng 5\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/bills",
							"host": ["{{baseUrl}}"],
							"path": ["api", "admin", "bills"]
						}
					}
				}
			]
		},
		{
			"name": "5. Complaint Management",
			"item": [
				{
					"name": "Submit New Complaint",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has complaint data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).to.exist;",
									"    pm.expect(jsonData.content).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{userToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Vấn đề về tiếng ồn",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Căn hộ tầng trên gây tiếng ồn sau 22h",
									"type": "text"
								},
								{
									"key": "imageProof",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/complaints",
							"host": ["{{baseUrl}}"],
							"path": ["api", "users", "complaints"]
						}
					}
				},
				{
					"name": "Get All Complaints (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{adminToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/admin/complaints",
							"host": ["{{baseUrl}}"],
							"path": ["api", "admin", "complaints"]
						}
					}
				}
			]
		}
	]
}
